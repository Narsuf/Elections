plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'jacoco'
}

apply from : '../../constants.gradle'

//region Jacoco
jacoco { toolVersion = '0.8.8' }

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled(true)
        html.enabled(true)
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*_Impl*.*',
            '**/*Binding*.*'
    ]
    def debugTree = fileTree(
            dir: "${buildDir}/intermediates/javac/debug/classes",
            excludes: fileFilter
    )
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree], [kotlinDebugTree])
    executionData.from = fileTree(dir: "${buildDir}/outputs", includes: [
            'unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec',
            'code_coverage/debugAndroidTest/connected/*/coverage.ec'
    ])
}
//endregion

android {
    compileSdk sdkV

    defaultConfig {
        minSdk minSdkV
        targetSdk sdkV
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            buildConfigField "String", "EL_PAIS_API_URL", '"http://rsl00.epimg.net/elecciones"'
        }

        debug {
            testCoverageEnabled true
            buildConfigField "String", "EL_PAIS_API_URL", '"http://127.0.0.1:8080"'
        }
    }

    buildFeatures { viewBinding true }

    testOptions {
        unitTests { includeAndroidResources = true }
    }

    namespace 'com.n27.core'
}

repositories {
    google()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    api 'com.google.android.material:material:1.8.0'
    api "androidx.fragment:fragment-ktx:$fragmentVersion"
    api 'androidx.multidex:multidex:2.0.1'

    // Moshi
    api "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // Lottie
    api 'com.airbnb.android:lottie:6.0.0'

    // Swipe
    api 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // SimpleXML
    api 'org.simpleframework:simple-xml:2.7.1'

    // OkHttp
    api "com.squareup.okhttp3:okhttp:$okHttpVersion"

    // Firebase
    api platform('com.google.firebase:firebase-bom:31.2.3')
    api 'com.google.firebase:firebase-analytics-ktx'
    api 'com.google.firebase:firebase-crashlytics-ktx'
    api "com.google.firebase:firebase-database-ktx"

    // Dagger 2
    api "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Android Jetpack

        // Room
        api "androidx.room:room-runtime:$roomVersion"
        api "androidx.room:room-ktx:$roomVersion"
        kapt "androidx.room:room-compiler:$roomVersion"

    // MPAndroidChart
    api 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    testImplementation project(':libraries:test')
    testImplementation "androidx.test:core:$testVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestImplementation project(':libraries:test')
    androidTestImplementation "androidx.test.ext:junit:$junitVersion"
    androidTestImplementation "com.adevinta.android:barista:$baristaVersion"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
}
