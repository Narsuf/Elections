apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'
apply from : '../constants.gradle'

jacoco { toolVersion = "$jacoco_version" }

tasks.withType(Test) { jacoco.includeNoLocationClasses = true }

task jacocoTestReport(type: JacocoReport,
        dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(
            dir: "${buildDir}/intermediates/javac/debug/compileDebugJavaWithJavac/classes",
            excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug",
            excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree], [kotlinDebugTree])
    executionData.from = fileTree(dir: project.buildDir, includes:
            ['jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'])
}

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.jorgedguezm.elections"
        minSdkVersion 19
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "URL", '"http://narsuf.ddns.net:8000/"'
        }

        debug {
            buildConfigField "String", "URL", '"http://narsuf.ddns.net:8000/"'
            testCoverageEnabled true
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        unitTests { includeAndroidResources = true }
    }
}

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'com.google.android.material:material:1.1.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.fragment:fragment:$androidFragment"
    implementation "androidx.fragment:fragment-ktx:$androidFragment"

    // Lottie
    implementation 'com.airbnb.android:lottie:2.8.0'

    // Dagger 2
    implementation "com.google.dagger:dagger-android:$project.ext.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$project.ext.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$project.ext.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$project.ext.daggerVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$project.ext.moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$project.ext.moshiVersion"

    // Android Jetpack

        // Room
        implementation "androidx.room:room-runtime:$project.ext.roomVersion"
        implementation "androidx.room:room-rxjava2:$project.ext.roomVersion"
        kapt "androidx.room:room-compiler:$project.ext.roomVersion"

        // Lifecycle
        implementation "androidx.lifecycle:lifecycle-extensions:$project.ext.lifecycleVersion"
        implementation "androidx.lifecycle:lifecycle-reactivestreams:$project.ext.lifecycleVersion"
        implementation "androidx.lifecycle:lifecycle-common-java8:$project.ext.lifecycleVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$project.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$project.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$project.ext.retrofitVersion"

    // RxJava RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // Multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'
}
